syntax = "proto3";

package rpc;

message Hash {
    string hash  = 1;
}

message Outpoint {
    string from_block = 1;
    uint32 tx_idx = 2;
    uint32 out_idx = 3;
}

message Input {
    Outpoint outpoint = 1;
    string listing = 2;
}

message Output{
    string listing = 1;
    uint64 money = 2;
}

message Transaction {
    repeated Input inputs = 1;
    repeated Output outputs = 2;
}

message Block {
  string hash = 1;
  uint32 version = 2;
  string msHash = 3;
  string prevHash = 4;
  string tipHash = 5;
  uint32 diffTarget = 6;
  uint32 nonce = 7;
  uint64 time = 8;
  repeated uint32 proof = 9;
  repeated Transaction transactions = 10;
}

message BlockList {
    repeated Block blocks = 1;
}

message Vertex {
    Block block = 1;
    uint64 height = 2;
    bool isMilestone = 3;
    uint32 redemptionStatus = 4;
    repeated bool txStatus = 5;
    uint64 rewards = 6;
}

message Milestone {
    uint64 height = 1;
    string chainwork = 2;
    uint64 blkDiff = 3;
    uint64 msDiff = 4;
    uint64 hashRate = 5;
    string hash = 6;
    uint64 time = 7;
    string debug_info = 8;
}

message MilestoneWithBlock {
    Milestone milestone = 1;
    Block block = 2;
}

message MilestoneList {
    repeated Milestone milestones = 1;
}

message Chain {
    string headHash = 1;
    uint64 PCHeight = 3;
    uint32 time = 4;
}

message ChainList {
    repeated Chain chains = 1;
}

message MsChain {
    Chain chain = 1;
    Milestone milestone = 2;
}

message MsChainList {
    repeated MsChain chains = 1;
}

message Peer {
  uint64 id = 1;
  string socket = 2;
  bool valid = 3;
  bool inbound = 4;
  bool isFullyConnected = 5;
  bool isSyncAvailable = 6;
  uint64 connected_time = 7;
  uint32 block_version = 8;
  uint64 local_service = 9;
  string app_version = 10;
}

service BasicBlockExplorerRPC {
    rpc GetBlock (Hash) returns (Block);
    rpc GetVertex (Hash) returns (Vertex);

    rpc GetLatestMilestone (EmptyMessage) returns (Milestone);
    rpc GetMilestone (HashOrHeight) returns (Milestone);
    rpc GetMilestonesFromHead(MsLocator) returns (MilestoneList);

    rpc GetLevelSet (HashOrHeight) returns (BlockList);
    rpc GetLevelSetSize (HashOrHeight) returns (UintMessage);

    rpc GetForks (EmptyMessage) returns (MsChainList);
    rpc GetPeerChains (EmptyMessage) returns (ChainList);
    rpc GetRecentStat (EmptyMessage) returns (GetRecentStatResponse);
    rpc Statistic (EmptyMessage) returns (StatisticResponse);
}

message EmptyMessage {}

message UintMessage {
    uint64 value = 1;
}

message HashOrHeight {
    oneof key {
        int64 height = 1;
        string hash = 2;
    }
}

message MsLocator {
    uint64 offset_from_head = 1;
    uint64 size = 2;
}

message GetRecentStatResponse {
    double tps = 1;
    uint32 timefrom = 2;
    uint32 timeto = 3;
    uint32 nblks = 4;
    uint32 ntxs = 5;
}

message StatisticResponse {
    uint64 height = 1;
    uint64 nblks = 2;
    uint64 ntxs = 3;
    double tps = 4;
    uint32 mempool = 5;
}

service CommanderRPC {
    // Command for EPIC program
    rpc Stop (EmptyMessage) returns (StopResponse);

    // Command for Miner
    rpc Status (EmptyMessage) returns (StatusResponse);
    rpc StartMiner (EmptyMessage) returns (StartMinerResponse);
    rpc StopMiner (EmptyMessage) returns (StopMinerResponse);

    // Command for Wallet
    rpc CreateFirstReg (CreateFirstRegRequest) returns (CreateFirstRegResponse);
    rpc CreateRandomTx (CreateRandomTxRequest) returns (CreateRandomTxResponse);
    rpc GenerateNewKey(EmptyMessage) returns (GenerateNewKeyResponse);
    rpc CreateTx(CreateTxRequest) returns (CreateTxResponse);
    rpc SetPassphrase(SetPassphraseRequest) returns(SetPassphraseResponse);
    rpc ChangePassphrase(ChangePassphraseRequest) returns (ChangePassphraseResponse);
    rpc Login(LoginRequest) returns (LoginResponse);
    rpc Redeem(RedeemRequest) returns (RedeemResponse);

    rpc GetBalance(EmptyMessage) returns (GetBalanceResponse);
    rpc GetWalletAddrs(EmptyMessage) returns (GetWalletAddrsResponse);
    rpc GetAllTxout(EmptyMessage) returns (GetAllTxoutResponse);

    rpc ValidateAddr(ValidateAddrRequest) returns (BooleanResponse);
    rpc VerifyMessage(VerifyMessageRequest) returns (BooleanResponse);

    // Command for Peer
    rpc DisconnectPeer (DisconnectPeerRequest) returns (DisconnectPeerResponse);
    rpc DisconnectAllPeers (EmptyMessage) returns (DisconnectAllResponse);
    rpc ConnectPeer (ConnectRequest) returns (ConnectResponse);
    rpc SyncCompleted(EmptyMessage) returns (SyncStatusResponse);
    rpc ShowPeer(ShowPeerRequest) returns (ShowPeerResponse);

    // Command for Subscription
    rpc Subscribe (SubscribeRequest) returns (SubscribeResponse);
    rpc DelSubscriber (DelSubscriberRequest) returns (EmptyMessage);
}

message SubscribeRequest{
    string address = 1;
    uint32 sub_type = 2;
}

message SubscribeResponse{
    string result = 1;
}

message DelSubscriberRequest{
    string address = 1;
}

message StopResponse {}

message BooleanResponse {
    bool success = 1;
}

message StartMinerResponse {
    bool success = 1;
}

message StopMinerResponse {
    uint32 result = 1;
}

message StatusResponse {
    bool isMinerRunning = 1;
    string latestMSHash = 2;
}

message CreateFirstRegRequest {
    string address = 1;
    bool force = 2;
}

message CreateFirstRegResponse {
    uint32 result = 1;
    string addr = 2;
}

message CreateRandomTxRequest {
    uint64 size = 1;
}

message CreateRandomTxResponse {
    uint32 result = 1;
}

message GenerateNewKeyResponse {
    uint32 result = 1;
    string address = 2;
}

message GetBalanceResponse {
    uint32 result = 1;
    uint64 coin = 2;
}

message CreateTxRequest {
    uint64 fee = 1;
    repeated Output outputs = 2;
}

message CreateTxResponse {
    uint32 result = 1;
    string txInfo = 2;
}

message SetPassphraseRequest {
    string passphrase = 1;
}

message SetPassphraseResponse {
    uint32 result = 1;
}

message ChangePassphraseRequest {
    string oldPassphrase = 1;
    string newPassphrase = 2;
}

message ChangePassphraseResponse {
    uint32 result = 1;
}

message LoginRequest {
    string passphrase = 1;
}

message LoginResponse {
    uint32 result = 1;
}

message RedeemRequest {
    string address = 1;
    uint64 coins = 2;
}

message RedeemResponse {
    uint32 result = 1;
    string addr = 2;
}

message GetWalletAddrsResponse {
    uint32 result = 1;
    repeated string addr = 2;
}

message GetAllTxoutResponse {
    uint32 result = 1;
    repeated RepeatedOutput outputs = 2;
}

message RepeatedOutput {
    string addr = 1;
    repeated Output output = 2;
}

message ValidateAddrRequest {
    string addr = 1;
}

message VerifyMessageRequest {
    string inputListing = 1;
    string outputListing = 2;
    repeated uint32 opcode = 3;
}

service RemoteSolver {
    rpc SendPOWTask (POWTask) returns (POWResult);
    rpc StopTask (StopTaskRequest) returns (StopTaskResponse);
}

message POWTask{
    uint32 task_id = 1;
    uint32 cycle_length = 2;
    uint32 init_nonce =3;
    uint32 init_time = 4;
    uint32 step = 5;
    bytes header = 6;
    string target = 7;
}

message POWResult{
    uint32 task_id = 1;
    uint32 nonce = 2;
    uint32 time = 3;
    repeated uint32 proof = 4;
    uint32 error_code = 5;
}

message StopTaskRequest {
    uint32 task_id = 1;
}

message StopTaskResponse {
    string result = 1 ;
}

message DisconnectAllResponse {
    string result = 1;
}

message DisconnectPeerRequest {
    repeated string address = 1;
}

message DisconnectPeerResponse {
    string result = 1;
}

message ConnectRequest {
    repeated string address = 1;
}

message ConnectResponse{
    string result = 1;
}

message GetPeersResponse {
    repeated string address = 1;
}

message SyncStatusResponse {
    bool completed = 1;
}

message ShowPeerRequest {
    string address = 1;
}

message ShowPeerResponse {
    repeated Peer peer = 1;
}

service Subscription{
    rpc PushBlock (Vertex) returns (EmptyMessage);
    rpc PushTx(Transaction) returns (EmptyMessage);
}
